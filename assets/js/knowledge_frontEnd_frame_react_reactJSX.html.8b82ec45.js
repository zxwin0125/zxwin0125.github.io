"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[7234],{3386:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,t]of s)a[i]=t;return a}},2364:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>n});var t=a(6254);const e={},l=(0,a(3386).A)(e,[["render",function(i,s){const a=(0,t.g2)("font");return(0,t.uX)(),(0,t.CE)("div",null,[s[8]||(s[8]=(0,t.Lk)("h2",{id:"定义",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#定义"},[(0,t.Lk)("span",null,"定义")])],-1)),(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[s[6]||(s[6]=(0,t.eW)("使用 React 就一定会写 JSX，JSX 到底是什么呢？ ")),(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[s[1]||(s[1]=(0,t.eW)("它是一种 ")),(0,t.Lk)("strong",null,[(0,t.bF)(a,{color:"red"},{default:(0,t.k6)((()=>s[0]||(s[0]=[(0,t.eW)("JavaScript 语法的扩展")]))),_:1})]),s[2]||(s[2]=(0,t.eW)("，React 使用它来描述用户界面长成什么样子"))]),s[5]||(s[5]=(0,t.Lk)("li",null,"虽然它看起来非常像 HTML，但它确实是 JavaScript",-1)),(0,t.Lk)("li",null,[s[4]||(s[4]=(0,t.eW)("在 React 代码执行之前，")),(0,t.Lk)("strong",null,[(0,t.bF)(a,{color:"red"},{default:(0,t.k6)((()=>s[3]||(s[3]=[(0,t.eW)("Babel 会将 JSX 编译为 React API，编译成浏览器能执行的 JavaScript 代码")]))),_:1})])])])]),s[7]||(s[7]=(0,t.Lk)("li",null,"从两种语法对比来看，JSX 语法的出现是为了让 React 开发人员编写用户界面代码更加轻松",-1))]),s[9]||(s[9]=(0,t.Fv)('<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;container&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Hello React&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;React is great &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 每一个节点都会编译成 React.createElement 方法的调用</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// React.createElement 的作用是创建 VirtualDOM 对象</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// VirtualDOM 对象就是 JavaScript 对象</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;div&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    className</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;container&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 节点属性</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;h3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello React&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;p&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;React is great&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="https://babeljs.io/repl" target="_blank" rel="noopener noreferrer">Babel REPL</a></li></ul><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;container&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Hello World&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> App</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\treturn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Hello React&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/zxwin0125/image-repo/img/Frame/React/07.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="jsx-代码的转换过程" tabindex="-1"><a class="header-anchor" href="#jsx-代码的转换过程"><span>JSX 代码的转换过程</span></a></h2><ul><li>JSX 先会被 Babel 转译为 React.createElement 方法的调用</li><li>React.createElement 方法返回 Virtual DOM 对象</li><li>React 将 Virtual DOM 对象转为真实 DOM 进行渲染</li></ul>',7))])}]]),n=JSON.parse('{"path":"/knowledge/frontEnd/frame/react/reactJSX.html","title":"JSX 到底是什么","lang":"zh-CN","frontmatter":{"title":"JSX 到底是什么","order":2,"description":"定义 使用 React 就一定会写 JSX，JSX 到底是什么呢？ 它是一种 ，React 使用它来描述用户界面长成什么样子 虽然它看起来非常像 HTML，但它确实是 JavaScript 在 React 代码执行之前， 从两种语法对比来看，JSX 语法的出现是为了让 React 开发人员编写用户界面代码更加轻松 Babel REPL JSX 代码的转...","head":[["meta",{"property":"og:url","content":"https://www.zxwin0125.top/knowledge/frontEnd/frame/react/reactJSX.html"}],["meta",{"property":"og:site_name","content":"欢迎来到三金的Blog！"}],["meta",{"property":"og:title","content":"JSX 到底是什么"}],["meta",{"property":"og:description","content":"定义 使用 React 就一定会写 JSX，JSX 到底是什么呢？ 它是一种 ，React 使用它来描述用户界面长成什么样子 虽然它看起来非常像 HTML，但它确实是 JavaScript 在 React 代码执行之前， 从两种语法对比来看，JSX 语法的出现是为了让 React 开发人员编写用户界面代码更加轻松 Babel REPL JSX 代码的转..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/zxwin0125/image-repo/img/Frame/React/07.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-18T01:32:52.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-18T01:32:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JSX 到底是什么\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/zxwin0125/image-repo/img/Frame/React/07.png\\"],\\"dateModified\\":\\"2024-12-18T01:32:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"三金\\",\\"url\\":\\"https://www.zxwin0125.top\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"JSX 代码的转换过程","slug":"jsx-代码的转换过程","link":"#jsx-代码的转换过程","children":[]}],"git":{"createdTime":1734349621000,"updatedTime":1734485572000,"contributors":[{"name":"zxwin0125","email":"zxwin_0125@163.com","commits":2}]},"readingTime":{"minutes":0.95,"words":285},"filePathRelative":"knowledge/frontEnd/frame/react/reactJSX.md","localizedDate":"2024年12月16日","excerpt":"<h2>定义</h2>\\n<ul>\\n<li>使用 React 就一定会写 JSX，JSX 到底是什么呢？\\n<ul>\\n<li>它是一种 <strong></strong>，React 使用它来描述用户界面长成什么样子</li>\\n<li>虽然它看起来非常像 HTML，但它确实是 JavaScript</li>\\n<li>在 React 代码执行之前，<strong></strong></li>\\n</ul>\\n</li>\\n<li>从两种语法对比来看，JSX 语法的出现是为了让 React 开发人员编写用户界面代码更加轻松</li>\\n</ul>","autoDesc":true}')}}]);