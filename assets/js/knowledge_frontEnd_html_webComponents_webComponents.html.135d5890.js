"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[1905],{3386:(e,t)=>{t.A=(e,t)=>{const n=e.__vccOpts||e;for(const[e,o]of t)n[e]=o;return n}},9258:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>i,data:()=>p});var o=n(6254);const l={},i=(0,n(3386).A)(l,[["render",function(e,t){const n=(0,o.g2)("font");return(0,o.uX)(),(0,o.CE)("div",null,[t[2]||(t[2]=(0,o.Lk)("div",{class:"hint-container info"},[(0,o.Lk)("p",{class:"hint-container-title"},"相关信息"),(0,o.Lk)("ul",null,[(0,o.Lk)("li",null,"作为「更高阶」的前端工程师，要时刻保持技术视野和信息广度"),(0,o.Lk)("li",null,"事实上，Web components 的概念在几年前也已经提出，但是貌似一直没有发展的「如火如荼」"),(0,o.Lk)("li",null,"在框架带来的「组件化」、「生命周期化」这些统治级别的概念下，对比并结合 Web components，我认为是可以深入研究的一个课题方向")])],-1)),(0,o.Lk)("ul",null,[(0,o.Lk)("li",null,[(0,o.Lk)("strong",null,[(0,o.bF)(n,{color:"red"},{default:(0,o.k6)((()=>t[0]||(t[0]=[(0,o.eW)("总结一下 Web components 的特殊点或者优点")]))),_:1})]),t[1]||(t[1]=(0,o.Fv)("： <ul><li>原生规范，无需框架，但是继承且具备了框架的优点 <ul><li>在新的 Web components 规范中，会发现组件生命周期的概念、slot 概念、模版概念（类比 JSX 或者 Vue template），再结合本来就已经存在的组件化，shadow dom，扩展原生元素的能力，Web components 还是具备了较好的发展前景</li></ul></li><li>原生使用，无需编译 <ul><li>现有的一系列框架，不论是 Vue 还是 React，都需要进行编译，而 Web components 因为原生，会得到浏览器的天然支持，自然就可以免去编译构建过程</li></ul></li><li>真正的 CSS scope <ul><li>Web components 实现了真正的 CSS scope，做到了样式隔离</li><li>这一点可以对比 CSS Modules</li><li>真正的 CSS scope 对于项目的可维护性至关重要</li></ul></li></ul>",2))])]),t[3]||(t[3]=(0,o.Lk)("div",{class:"hint-container important"},[(0,o.Lk)("p",{class:"hint-container-title"},"重要"),(0,o.Lk)("ul",null,[(0,o.Lk)("li",null,"真正的高级工程师，不仅仅要理解 this、熟练掌握各种基础（当然这是前提），更要有技术嗅觉，对新的解决方案能够理解，并进行对比，面向「未来」编程")])],-1))])}]]),p=JSON.parse('{"path":"/knowledge/frontEnd/html/webComponents/webComponents.html","title":"不可忽视的 Web components","lang":"zh-CN","frontmatter":{"title":"不可忽视的 Web components","date":"2024-08-12T00:00:00.000Z","category":["Web components"],"order":1,"description":"相关信息 作为「更高阶」的前端工程师，要时刻保持技术视野和信息广度 事实上，Web components 的概念在几年前也已经提出，但是貌似一直没有发展的「如火如荼」 在框架带来的「组件化」、「生命周期化」这些统治级别的概念下，对比并结合 Web components，我认为是可以深入研究的一个课题方向 ： 原生规范，无需框架，但是继承且具备了框架的优...","head":[["meta",{"property":"og:url","content":"https://www.zxwin0125.top/knowledge/frontEnd/html/webComponents/webComponents.html"}],["meta",{"property":"og:site_name","content":"欢迎来到我的Blog"}],["meta",{"property":"og:title","content":"不可忽视的 Web components"}],["meta",{"property":"og:description","content":"相关信息 作为「更高阶」的前端工程师，要时刻保持技术视野和信息广度 事实上，Web components 的概念在几年前也已经提出，但是貌似一直没有发展的「如火如荼」 在框架带来的「组件化」、「生命周期化」这些统治级别的概念下，对比并结合 Web components，我认为是可以深入研究的一个课题方向 ： 原生规范，无需框架，但是继承且具备了框架的优..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T01:31:28.000Z"}],["meta",{"property":"article:published_time","content":"2024-08-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T01:31:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"不可忽视的 Web components\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-24T01:31:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"三金\\",\\"url\\":\\"https://www.zxwin0125.top\\"}]}"]]},"headers":[],"git":{"createdTime":1732172157000,"updatedTime":1732411888000,"contributors":[{"name":"zxwin0125","email":"zxwin_0125@163.com","commits":2}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"knowledge/frontEnd/html/webComponents/webComponents.md","localizedDate":"2024年8月12日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<ul>\\n<li>作为「更高阶」的前端工程师，要时刻保持技术视野和信息广度</li>\\n<li>事实上，Web components 的概念在几年前也已经提出，但是貌似一直没有发展的「如火如荼」</li>\\n<li>在框架带来的「组件化」、「生命周期化」这些统治级别的概念下，对比并结合 Web components，我认为是可以深入研究的一个课题方向</li>\\n</ul>\\n</div>","autoDesc":true}')}}]);